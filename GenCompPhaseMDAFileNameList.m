function FileNameList = GenCompPhaseMDAFileNameList(nFOVmax,nZmax,nTmax,FixedValue,MicroscopeGeneration)

% Written by PMM on 2019.05.08

% Purpose:
% To generate a list of compensated file names generated by typical
%   multidimensional acquisition (MDA) routines on the Tescan Q-Phase
%   microscope. This listing facilitates batch analysis when a single
%   directory contains images from multiple FOVs, Z-positions, and/or time
%   points.

% Input:
% nFOVmax is max number of FOVs (positive integer) to cycle through
% nZmax is max number of z planes (positive integer) to cycle through
% nTmax is max number of timepoints (positive integer) to cycle through
% FixedValue is an optional parameter that allows for a particular value of
%   each of nFOV, nZ, and nT to be used, instead of running from 1 to nX in
%   each case, where nX = {nFOV, nZ, nT}. FixedValue is expected to be a
%   1-by-3 cell array. The value of the ith entry specifies the value to
%   which nX is fixed (i = 1 -> nFOV, i = 2 -> nZ, i = 3 -> nT). The
%   default value of FixedValue is {[],[],[]}. If, for instance, only one
%   nX is to be held constant, the FixedValue should be passed with empty
%   arrays for all i which are to vary.
% MicroscopeGenerationn is an optional parameter that specifies which
%   Qphase microscope was used. Values are 'G1' and 'G2', which at MPI-CBG
%   had different software versions that used distinct file-naming
%   conventions. Default is G1.
%   G1: Compensated phase-fff-zzz-ttt.tiff
%   G2: Compensated phase - [tttt, ffff, zzzz].tiff

% Output:
% Cell array containing strings of the form:
%   'Compensated phase-xxx-yyy-zz.tiff'
%   where xxx, yyy, and zz are zero-padded numbers between 001 and nFOV,
%   001 and nZ, and 1 and nT, respectively.

% Note that the padding on nT is variable, while that on nFOV and nZ is
%   usually fixed at 3.

% Updates
% 2024.01.23_ Changed output image suffix to .ome.tiff for G2 phase images,
% following SophiQ update to v10.

% Major update by PMM on 2021.06.16 according to the following changes:
%   - Added optional variable MicroscopeGeneration
%   - Added switch on MicroscopeGeneration to specify the image naming
%   convention.
%   - Moved the specification of the zero-padding on the number of
%   timepoints into a conditional that only runs for G1.

% Major update by PMM on 2019.10.29 according to the following changes
%   -Changed all for loops to while loops, so that I could incorporate the
%   fixed variables by conditional statements.
%   -Added optional input variable, FixedValue, and a conditional statement
%   to assign it a default value.
%   -Added conditional statements within each while loop to enable the loop
%   to conditionally run once at a fixed value and then stop.
%   -Changed strategy for specifying the element of FileNameList to write
%   to from a,b,c-based to a counter, lInd.


%% Assess fixed values
if nargin < 5
    MicroscopeGeneration = 'G1';
end

if strcmp(MicroscopeGeneration,'G1') == 1   % Determine Padding for nT index:
    tmp = num2str(nTmax);
    LengthPadnT = length(tmp);
    nTRegExp = ['%0',num2str(LengthPadnT),'u'];
end

if nargin < 4
    FixedValue = {[],[],[]};
end

if isempty(FixedValue{1}) == 1
    nFOV = nFOVmax;
else
    nFOV = 1;
end
if isempty(FixedValue{2}) == 1
    nZ = nZmax;
else
    nZ = 1;
end
if isempty(FixedValue{3}) == 1
    nT = nTmax;
else
    nT = 1;
end
%% Generate
FileNameList = cell(nFOV*nZ*nT,1);
a = 1;
b = 1;
c = 1;
lInd = 1;   % This is a counter index which specifies which element of FileNameList to write to.
while a < nFOVmax + 1
    if isempty(FixedValue{1}) == 0
        a = FixedValue{1};
    end
    while b < nZmax + 1
        if isempty(FixedValue{2}) == 0
            b = FixedValue{2};
        end
        while c < nTmax + 1
            if isempty(FixedValue{3}) == 0
                c = FixedValue{3};
            end
            switch MicroscopeGeneration
                case 'G1'
                    FileNameList(lInd) = {...
                        ['Compensated phase',...
                        '-',num2str(a,'%03u'),...
                        '-',num2str(b,'%03u'),...
                        '-',num2str(c-1,nTRegExp),...
                        '.tiff']};
                    %{
                    FileNameList((a-1)*nZ*nT + (b-1)*nT + c) = {...
                        ['Compensated phase',...
                        '-',num2str(a,'%03u'),...
                        '-',num2str(b,'%03u'),...
                        '-',num2str(c-1,nTRegExp),...
                        '.tiff']};
                    %}
                case 'G2'
                    FileNameList(lInd) = {...
                        ['Compensated phase',...
                        ' - [',num2str(c-1,'%04u'),...
                        ', ',num2str(a-1,'%04u'),...
                        ', ',num2str(b-1,'%04u'),...
                        '].ome.tiff']};
            end
            lInd = lInd + 1;    % Increment lInd by 1 after each entry
            if isempty(FixedValue{3}) == 0
                c = nTmax+1;
            else
                c = c+1;
            end
        end
        c = 1;
        if isempty(FixedValue{2}) == 0
            b = nZmax+1;
        else
            b = b+1;
        end
    end
    b = 1;
    if isempty(FixedValue{1}) == 0
        a = nFOVmax+1;
    else
        a = a+1;
    end
end